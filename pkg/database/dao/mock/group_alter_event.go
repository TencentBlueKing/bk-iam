// Code generated by MockGen. DO NOT EDIT.
// Source: group_alter_event.go

// Package mock is a generated GoMock package.
package mock

import (
	dao "iam/pkg/database/dao"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	sqlx "github.com/jmoiron/sqlx"
)

// MockGroupAlterEventManager is a mock of GroupAlterEventManager interface.
type MockGroupAlterEventManager struct {
	ctrl     *gomock.Controller
	recorder *MockGroupAlterEventManagerMockRecorder
}

// MockGroupAlterEventManagerMockRecorder is the mock recorder for MockGroupAlterEventManager.
type MockGroupAlterEventManagerMockRecorder struct {
	mock *MockGroupAlterEventManager
}

// NewMockGroupAlterEventManager creates a new mock instance.
func NewMockGroupAlterEventManager(ctrl *gomock.Controller) *MockGroupAlterEventManager {
	mock := &MockGroupAlterEventManager{ctrl: ctrl}
	mock.recorder = &MockGroupAlterEventManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupAlterEventManager) EXPECT() *MockGroupAlterEventManagerMockRecorder {
	return m.recorder
}

// BulkCreateWithTx mocks base method.
func (m *MockGroupAlterEventManager) BulkCreateWithTx(tx *sqlx.Tx, groupAlterEvents []dao.GroupAlterEvent) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateWithTx", tx, groupAlterEvents)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BulkCreateWithTx indicates an expected call of BulkCreateWithTx.
func (mr *MockGroupAlterEventManagerMockRecorder) BulkCreateWithTx(tx, groupAlterEvents interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateWithTx", reflect.TypeOf((*MockGroupAlterEventManager)(nil).BulkCreateWithTx), tx, groupAlterEvents)
}

// Delete mocks base method.
func (m *MockGroupAlterEventManager) Delete(pk int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", pk)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockGroupAlterEventManagerMockRecorder) Delete(pk interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockGroupAlterEventManager)(nil).Delete), pk)
}

// Get mocks base method.
func (m *MockGroupAlterEventManager) Get(pk int64) (dao.GroupAlterEvent, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", pk)
	ret0, _ := ret[0].(dao.GroupAlterEvent)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockGroupAlterEventManagerMockRecorder) Get(pk interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockGroupAlterEventManager)(nil).Get), pk)
}

// IncrCheckCount mocks base method.
func (m *MockGroupAlterEventManager) IncrCheckCount(pk int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IncrCheckCount", pk)
	ret0, _ := ret[0].(error)
	return ret0
}

// IncrCheckCount indicates an expected call of IncrCheckCount.
func (mr *MockGroupAlterEventManagerMockRecorder) IncrCheckCount(pk interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IncrCheckCount", reflect.TypeOf((*MockGroupAlterEventManager)(nil).IncrCheckCount), pk)
}

// ListPKLessThanCheckCountBeforeCreateAt mocks base method.
func (m *MockGroupAlterEventManager) ListPKLessThanCheckCountBeforeCreateAt(CheckCount, createdAt int64) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListPKLessThanCheckCountBeforeCreateAt", CheckCount, createdAt)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListPKLessThanCheckCountBeforeCreateAt indicates an expected call of ListPKLessThanCheckCountBeforeCreateAt.
func (mr *MockGroupAlterEventManagerMockRecorder) ListPKLessThanCheckCountBeforeCreateAt(CheckCount, createdAt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListPKLessThanCheckCountBeforeCreateAt", reflect.TypeOf((*MockGroupAlterEventManager)(nil).ListPKLessThanCheckCountBeforeCreateAt), CheckCount, createdAt)
}
