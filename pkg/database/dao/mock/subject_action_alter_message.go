// Code generated by MockGen. DO NOT EDIT.
// Source: subject_action_alter_message.go

// Package mock is a generated GoMock package.
package mock

import (
	dao "iam/pkg/database/dao"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	sqlx "github.com/jmoiron/sqlx"
)

// MockSubjectActionAlterMessageManager is a mock of SubjectActionAlterMessageManager interface.
type MockSubjectActionAlterMessageManager struct {
	ctrl     *gomock.Controller
	recorder *MockSubjectActionAlterMessageManagerMockRecorder
}

// MockSubjectActionAlterMessageManagerMockRecorder is the mock recorder for MockSubjectActionAlterMessageManager.
type MockSubjectActionAlterMessageManagerMockRecorder struct {
	mock *MockSubjectActionAlterMessageManager
}

// NewMockSubjectActionAlterMessageManager creates a new mock instance.
func NewMockSubjectActionAlterMessageManager(ctrl *gomock.Controller) *MockSubjectActionAlterMessageManager {
	mock := &MockSubjectActionAlterMessageManager{ctrl: ctrl}
	mock.recorder = &MockSubjectActionAlterMessageManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubjectActionAlterMessageManager) EXPECT() *MockSubjectActionAlterMessageManagerMockRecorder {
	return m.recorder
}

// BulkCreateWithTx mocks base method.
func (m *MockSubjectActionAlterMessageManager) BulkCreateWithTx(tx *sqlx.Tx, messages []dao.SubjectActionAlterMessage) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateWithTx", tx, messages)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkCreateWithTx indicates an expected call of BulkCreateWithTx.
func (mr *MockSubjectActionAlterMessageManagerMockRecorder) BulkCreateWithTx(tx, messages interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateWithTx", reflect.TypeOf((*MockSubjectActionAlterMessageManager)(nil).BulkCreateWithTx), tx, messages)
}

// BulkUpdateStatus mocks base method.
func (m *MockSubjectActionAlterMessageManager) BulkUpdateStatus(uuids []string, status int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpdateStatus", uuids, status)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpdateStatus indicates an expected call of BulkUpdateStatus.
func (mr *MockSubjectActionAlterMessageManagerMockRecorder) BulkUpdateStatus(uuids, status interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpdateStatus", reflect.TypeOf((*MockSubjectActionAlterMessageManager)(nil).BulkUpdateStatus), uuids, status)
}

// Delete mocks base method.
func (m *MockSubjectActionAlterMessageManager) Delete(uuid string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", uuid)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockSubjectActionAlterMessageManagerMockRecorder) Delete(uuid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockSubjectActionAlterMessageManager)(nil).Delete), uuid)
}

// Get mocks base method.
func (m *MockSubjectActionAlterMessageManager) Get(uuid string) (dao.SubjectActionAlterMessage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", uuid)
	ret0, _ := ret[0].(dao.SubjectActionAlterMessage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockSubjectActionAlterMessageManagerMockRecorder) Get(uuid interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockSubjectActionAlterMessageManager)(nil).Get), uuid)
}
