// Code generated by MockGen. DO NOT EDIT.
// Source: group_resource_policy.go

// Package mock is a generated GoMock package.
package mock

import (
	dao "iam/pkg/database/dao"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	sqlx "github.com/jmoiron/sqlx"
)

// MockGroupResourcePolicyManager is a mock of GroupResourcePolicyManager interface.
type MockGroupResourcePolicyManager struct {
	ctrl     *gomock.Controller
	recorder *MockGroupResourcePolicyManagerMockRecorder
}

// MockGroupResourcePolicyManagerMockRecorder is the mock recorder for MockGroupResourcePolicyManager.
type MockGroupResourcePolicyManagerMockRecorder struct {
	mock *MockGroupResourcePolicyManager
}

// NewMockGroupResourcePolicyManager creates a new mock instance.
func NewMockGroupResourcePolicyManager(ctrl *gomock.Controller) *MockGroupResourcePolicyManager {
	mock := &MockGroupResourcePolicyManager{ctrl: ctrl}
	mock.recorder = &MockGroupResourcePolicyManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGroupResourcePolicyManager) EXPECT() *MockGroupResourcePolicyManagerMockRecorder {
	return m.recorder
}

// BulkDeleteByPKsWithTx mocks base method.
func (m *MockGroupResourcePolicyManager) BulkDeleteByPKsWithTx(tx *sqlx.Tx, pks []int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkDeleteByPKsWithTx", tx, pks)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkDeleteByPKsWithTx indicates an expected call of BulkDeleteByPKsWithTx.
func (mr *MockGroupResourcePolicyManagerMockRecorder) BulkDeleteByPKsWithTx(tx, pks interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkDeleteByPKsWithTx", reflect.TypeOf((*MockGroupResourcePolicyManager)(nil).BulkDeleteByPKsWithTx), tx, pks)
}

// BulkInsertWithTx mocks base method.
func (m *MockGroupResourcePolicyManager) BulkInsertWithTx(tx *sqlx.Tx, groupResourcePolicies []dao.GroupResourcePolicy) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkInsertWithTx", tx, groupResourcePolicies)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkInsertWithTx indicates an expected call of BulkInsertWithTx.
func (mr *MockGroupResourcePolicyManagerMockRecorder) BulkInsertWithTx(tx, groupResourcePolicies interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkInsertWithTx", reflect.TypeOf((*MockGroupResourcePolicyManager)(nil).BulkInsertWithTx), tx, groupResourcePolicies)
}

// BulkUpdateActionPKsWithTx mocks base method.
func (m *MockGroupResourcePolicyManager) BulkUpdateActionPKsWithTx(tx *sqlx.Tx, pkActionPKss []dao.GroupResourcePolicyPKActionPKs) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpdateActionPKsWithTx", tx, pkActionPKss)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpdateActionPKsWithTx indicates an expected call of BulkUpdateActionPKsWithTx.
func (mr *MockGroupResourcePolicyManagerMockRecorder) BulkUpdateActionPKsWithTx(tx, pkActionPKss interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpdateActionPKsWithTx", reflect.TypeOf((*MockGroupResourcePolicyManager)(nil).BulkUpdateActionPKsWithTx), tx, pkActionPKss)
}

// GetPKAndActionPKs mocks base method.
func (m *MockGroupResourcePolicyManager) GetPKAndActionPKs(groupPK, templateID int64, systemID string, actionRelatedResourceTypePK, resourceTypePK int64, resourceID string) (dao.GroupResourcePolicyPKActionPKs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPKAndActionPKs", groupPK, templateID, systemID, actionRelatedResourceTypePK, resourceTypePK, resourceID)
	ret0, _ := ret[0].(dao.GroupResourcePolicyPKActionPKs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPKAndActionPKs indicates an expected call of GetPKAndActionPKs.
func (mr *MockGroupResourcePolicyManagerMockRecorder) GetPKAndActionPKs(groupPK, templateID, systemID, actionRelatedResourceTypePK, resourceTypePK, resourceID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPKAndActionPKs", reflect.TypeOf((*MockGroupResourcePolicyManager)(nil).GetPKAndActionPKs), groupPK, templateID, systemID, actionRelatedResourceTypePK, resourceTypePK, resourceID)
}
