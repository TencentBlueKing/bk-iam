// Code generated by MockGen. DO NOT EDIT.
// Source: subject.go

// Package mock is a generated GoMock package.
package mock

import (
	pap "iam/pkg/abac/pap"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockSubjectController is a mock of SubjectController interface.
type MockSubjectController struct {
	ctrl     *gomock.Controller
	recorder *MockSubjectControllerMockRecorder
}

// MockSubjectControllerMockRecorder is the mock recorder for MockSubjectController.
type MockSubjectControllerMockRecorder struct {
	mock *MockSubjectController
}

// NewMockSubjectController creates a new mock instance.
func NewMockSubjectController(ctrl *gomock.Controller) *MockSubjectController {
	mock := &MockSubjectController{ctrl: ctrl}
	mock.recorder = &MockSubjectControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSubjectController) EXPECT() *MockSubjectControllerMockRecorder {
	return m.recorder
}

// BulkCreate mocks base method.
func (m *MockSubjectController) BulkCreate(subjects []pap.Subject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreate", subjects)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkCreate indicates an expected call of BulkCreate.
func (mr *MockSubjectControllerMockRecorder) BulkCreate(subjects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreate", reflect.TypeOf((*MockSubjectController)(nil).BulkCreate), subjects)
}

// BulkDeleteGroup mocks base method.
func (m *MockSubjectController) BulkDeleteGroup(subjects []pap.Subject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkDeleteGroup", subjects)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkDeleteGroup indicates an expected call of BulkDeleteGroup.
func (mr *MockSubjectControllerMockRecorder) BulkDeleteGroup(subjects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkDeleteGroup", reflect.TypeOf((*MockSubjectController)(nil).BulkDeleteGroup), subjects)
}

// BulkDeleteUserAndDepartment mocks base method.
func (m *MockSubjectController) BulkDeleteUserAndDepartment(subjects []pap.Subject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkDeleteUserAndDepartment", subjects)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkDeleteUserAndDepartment indicates an expected call of BulkDeleteUserAndDepartment.
func (mr *MockSubjectControllerMockRecorder) BulkDeleteUserAndDepartment(subjects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkDeleteUserAndDepartment", reflect.TypeOf((*MockSubjectController)(nil).BulkDeleteUserAndDepartment), subjects)
}

// BulkUpdateName mocks base method.
func (m *MockSubjectController) BulkUpdateName(subjects []pap.Subject) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkUpdateName", subjects)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkUpdateName indicates an expected call of BulkUpdateName.
func (mr *MockSubjectControllerMockRecorder) BulkUpdateName(subjects interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkUpdateName", reflect.TypeOf((*MockSubjectController)(nil).BulkUpdateName), subjects)
}
